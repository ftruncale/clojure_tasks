; This is the Calva evaluation results output window.
; TIPS: The keyboard shortcut `ctrl+alt+c o` shows and focuses this window
;   when connected to a REPL session.
; Please see https://calva.io/output/ for more info.
; Happy coding! ♥️

; Jacking in...
; Starting Jack-in Terminal: lein update-in :dependencies conj '[nrepl,"0.8.3"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.25.8"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- repl :headless
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS: 
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉clojure-noob.core꞉> 
; Jack-in done.
clj꞉clojure-noob.core꞉> 1
1
clj꞉clojure-noob.core꞉> 
(train)
Choo choo!
nil
clj꞉clojure-noob.core꞉> 
"a string"
"a string"
clj꞉clojure-noob.core꞉> ["a" "VECTOR" "of" "POTATOES
                                        "]
["a" "VECTOR" "of" "POTATOES\n                                        "]
clj꞉clojure-noob.core꞉> 
(+ 1 2 3)
6
clj꞉clojure-noob.core꞉> 
(str "It was the panda " "in the L IBRARY")
"It was the panda in the L IBRARY"
clj꞉clojure-noob.core꞉> (+ 
                         
                         
                    )
0
clj꞉clojure-noob.core꞉> (if boolean-form
                          then-form
                          optional-else-form
                          )
; Syntax error compiling at (output.calva-repl:43:25).
; Unable to resolve symbol: boolean-form in this context
clj꞉clojure-noob.core꞉> (if true
                          "By  POTATO SANDWICH!"
                          "By my ASS")
"By  POTATO SANDWICH!"
clj꞉clojure-noob.core꞉> (if false 
                          "by zeus's BUTTHOLE"
                          "by my ass")
"by my ass"
clj꞉clojure-noob.core꞉> 
(if false 
  "SHIT")
nil
clj꞉clojure-noob.core꞉> (if true
                          (do (println "SUCCESS")
                          "BY ZEUSY BOYS HAMMMAR")
                          (do (println "FAILURE")
                              "By aquamanananna trident"))
SUCCESS
"BY ZEUSY BOYS HAMMMAR"
clj꞉clojure-noob.core꞉> (when true
                          (println "AHAHAHAHAH")
                          "aahaahah")
AHAHAHAHAH
"aahaahah"
clj꞉clojure-noob.core꞉> true
true
clj꞉clojure-noob.core꞉> 
false
false
clj꞉clojure-noob.core꞉> 
(nil? 1
    )
false
clj꞉clojure-noob.core꞉> 
(nil? nil)
true
clj꞉clojure-noob.core꞉> 
(if "bears eat beats"
  "BEARS FUCK ME")
"BEARS FUCK ME"
clj꞉clojure-noob.core꞉> 
(if nil
  "ohNO"
  "ohYES")
"ohYES"
clj꞉clojure-noob.core꞉> (= 1 1)
true
clj꞉clojure-noob.core꞉> 
